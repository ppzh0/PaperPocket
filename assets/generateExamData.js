const fs = require('fs');
const path = require('path');

const abbrSubjects = {
    'My': 'မြန်မာစာ',
    'Eng': 'English',
    'Math': 'သင်္ချာ',
    'Geo': 'ပထဝီဝင်',
    'Hist': 'သမိုင်း',
    'Sci': 'သိပ္ပံ',
    'SS': 'လူမှုရေး',
    'Chem': 'Chemistry',
    'Phys': 'Physics',
    'Bio': 'Biology'
};

const abbrGrades = {
    'G12': 'Grade 12',
    'G09': 'Grade 9',
    'G05': 'Grade 5',
};

const statesAndDivisionsNames = {
    'Kachin': 'ကချင်ပြည်နယ်',
    'Kayah': 'ကယားပြည်နယ်',
    'Kayin': 'ကရင်ပြည်နယ်',
    'Chin': 'ချင်းပြည်နယ်',
    'Sagaing': 'စစ်ကိုင်းတိုင်း',
    'Tanintharyi': 'တနင်္သာရီတိုင်း',
    'Bago': 'ပဲခူးတိုင်း',
    'Magway': 'မကွေးတိုင်း',
    'Mandalay': 'မန္တလေးတိုင်း',
    'Mon': 'မွန်ပြည်နယ်',
    'Rakhine': 'ရခိုင်ပြည်နယ်',
    'Yangon': 'ရန်ကုန်တိုင်း',
    'Shan': 'ရှမ်းပြည်နယ်',
    'Ayeyarwady': 'ဧရာဝတီတိုင်း',
    'Naypyitaw': 'နေပြည်တော်'
};

const subjects = Object.keys(abbrSubjects);
const grades = Object.keys(abbrGrades);
const statesAndDivisions = Object.keys(statesAndDivisionsNames);
const years = ['2025', '2024'];

const examData = [];
const papersDir = path.join(__dirname, "./../papers");
const allFiles = fs.readdirSync(papersDir); // Read all files once

console.time('Process Time');

statesAndDivisions.forEach(state => {
    subjects.forEach(subject => {
        grades.forEach(grade => {
            years.forEach(year => {
                console.log(`(#)>>> Checking: ${grade}, ${year}, ${subject}, ${state}`);

                const expectedStart = `${grade}_${year}_${subject}_${state}`;
                const matchedFile = allFiles.find(file => file.startsWith(expectedStart));

                if (matchedFile) {
                    const paperInfo = `${abbrGrades[grade]} ~ ${abbrSubjects[subject]} (${year}) ― ${statesAndDivisionsNames[state]}`;
                    const fileURL = `./../papers/${matchedFile}`;

                    examData.push({
                        name: paperInfo,
                        url: fileURL,
                        grade: grade,
                        year: year,
                        subject: subject,
                        place: state
                    });

                    console.log(`
                        \u2705 File found: ${matchedFile}
                        `);
                } else {
                    console.log(`\u274C Not Found: ${expectedStart}`);
                }
            });
        });
    });
});

// Sorting the exam data based on grade
const gradeOrder = { "G12": 12, "G09": 9, "G05": 5 };

const sortedExamData = examData.sort((a, b) => {
    return gradeOrder[b.grade] - gradeOrder[a.grade]; // Sorting in descending order based on grade
});

// Check for flags
const humanReadable = process.argv.includes('--readable');
const showFileList = process.argv.includes('--show-file-list');

// Write the sorted exam data to a JSON file (force UTF-8 encoding)
fs.writeFileSync('examData.json', JSON.stringify(sortedExamData, null, humanReadable ? 2 : 0), 'utf8');

// Show file list if the flag is used
if (showFileList) {
    console.log('\nFiles in ./papers directory:');
    fs.readdirSync(path.join(__dirname, './../papers')).forEach(file => console.log(`  - ${file}`));
}

console.log('\nExam data generated successfully (saved to root/assets/examData.json).');

// ;-;
// if (!humanReadable || !showFileList) console.log(`(!) Use flag: 
//     \`--readable\` for readable JSON format
//     \`--show-file-list\` to read contents containing in the "./papers" folder
// `); 

if (!humanReadable) console.log('(!) Use the flag \`--readable\` for readable JSON format');
if (!showFileList) console.log('(!) Use the flag \`--show-file-list\` to read contents containing in the "./papers" folder');

console.timeEnd('Process Time');

// This code is generated by ChatGPT
// Some parts were tweaked for preference